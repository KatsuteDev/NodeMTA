// source: gtfs-realtime-service-status.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var proto = {};

var gtfs$realtime_pb = require('./gtfs-realtime_pb.js');
goog.object.extend(proto, gtfs$realtime_pb);
goog.exportSymbol('transit_realtime.MercuryAlert', null, proto);
goog.exportSymbol('transit_realtime.MercuryEntitySelector', null, proto);
goog.exportSymbol('transit_realtime.MercuryEntitySelector.Priority', null, proto);
goog.exportSymbol('transit_realtime.MercuryFeedHeader', null, proto);
goog.exportSymbol('transit_realtime.MercuryStationAlternative', null, proto);
goog.exportSymbol('transit_realtime.mercuryAlert', null, proto);
goog.exportSymbol('transit_realtime.mercuryEntitySelector', null, proto);
goog.exportSymbol('transit_realtime.mercuryFeedHeader', null, proto);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.transit_realtime.MercuryFeedHeader = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.transit_realtime.MercuryFeedHeader, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.transit_realtime.MercuryFeedHeader.displayName = 'proto.transit_realtime.MercuryFeedHeader';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.transit_realtime.MercuryStationAlternative = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.transit_realtime.MercuryStationAlternative, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.transit_realtime.MercuryStationAlternative.displayName = 'proto.transit_realtime.MercuryStationAlternative';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.transit_realtime.MercuryAlert = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.transit_realtime.MercuryAlert.repeatedFields_, null);
};
goog.inherits(proto.transit_realtime.MercuryAlert, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.transit_realtime.MercuryAlert.displayName = 'proto.transit_realtime.MercuryAlert';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.transit_realtime.MercuryEntitySelector = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.transit_realtime.MercuryEntitySelector, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.transit_realtime.MercuryEntitySelector.displayName = 'proto.transit_realtime.MercuryEntitySelector';
}

if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.transit_realtime.MercuryFeedHeader.prototype.toObject = function(opt_includeInstance) {
  return proto.transit_realtime.MercuryFeedHeader.toObject(opt_includeInstance, this);
};

/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.transit_realtime.MercuryFeedHeader} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.transit_realtime.MercuryFeedHeader.toObject = function(includeInstance, msg) {
  var f, obj = {
    mercuryVersion: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.transit_realtime.MercuryFeedHeader}
 */
proto.transit_realtime.MercuryFeedHeader.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.transit_realtime.MercuryFeedHeader;
  return proto.transit_realtime.MercuryFeedHeader.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.transit_realtime.MercuryFeedHeader} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.transit_realtime.MercuryFeedHeader}
 */
proto.transit_realtime.MercuryFeedHeader.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMercuryVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.transit_realtime.MercuryFeedHeader.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.transit_realtime.MercuryFeedHeader.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.transit_realtime.MercuryFeedHeader} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.transit_realtime.MercuryFeedHeader.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
};

/**
 * required string mercury_version = 1;
 * @return {string}
 */
proto.transit_realtime.MercuryFeedHeader.prototype.getMercuryVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};

/**
 * @param {string} value
 * @return {!proto.transit_realtime.MercuryFeedHeader} returns this
 */
proto.transit_realtime.MercuryFeedHeader.prototype.setMercuryVersion = function(value) {
  return jspb.Message.setField(this, 1, value);
};

/**
 * Clears the field making it undefined.
 * @return {!proto.transit_realtime.MercuryFeedHeader} returns this
 */
proto.transit_realtime.MercuryFeedHeader.prototype.clearMercuryVersion = function() {
  return jspb.Message.setField(this, 1, undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.transit_realtime.MercuryFeedHeader.prototype.hasMercuryVersion = function() {
  return jspb.Message.getField(this, 1) != null;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.transit_realtime.MercuryStationAlternative.prototype.toObject = function(opt_includeInstance) {
  return proto.transit_realtime.MercuryStationAlternative.toObject(opt_includeInstance, this);
};

/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.transit_realtime.MercuryStationAlternative} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.transit_realtime.MercuryStationAlternative.toObject = function(includeInstance, msg) {
  var f, obj = {
    affectedEntity: (f = msg.getAffectedEntity()) && gtfs$realtime_pb.EntitySelector.toObject(includeInstance, f),
    notes: (f = msg.getNotes()) && gtfs$realtime_pb.TranslatedString.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.transit_realtime.MercuryStationAlternative}
 */
proto.transit_realtime.MercuryStationAlternative.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.transit_realtime.MercuryStationAlternative;
  return proto.transit_realtime.MercuryStationAlternative.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.transit_realtime.MercuryStationAlternative} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.transit_realtime.MercuryStationAlternative}
 */
proto.transit_realtime.MercuryStationAlternative.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new gtfs$realtime_pb.EntitySelector;
      reader.readMessage(value,gtfs$realtime_pb.EntitySelector.deserializeBinaryFromReader);
      msg.setAffectedEntity(value);
      break;
    case 2:
      var value = new gtfs$realtime_pb.TranslatedString;
      reader.readMessage(value,gtfs$realtime_pb.TranslatedString.deserializeBinaryFromReader);
      msg.setNotes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.transit_realtime.MercuryStationAlternative.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.transit_realtime.MercuryStationAlternative.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.transit_realtime.MercuryStationAlternative} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.transit_realtime.MercuryStationAlternative.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAffectedEntity();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      gtfs$realtime_pb.EntitySelector.serializeBinaryToWriter
    );
  }
  f = message.getNotes();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      gtfs$realtime_pb.TranslatedString.serializeBinaryToWriter
    );
  }
};

/**
 * required EntitySelector affected_entity = 1;
 * @return {!proto.transit_realtime.EntitySelector}
 */
proto.transit_realtime.MercuryStationAlternative.prototype.getAffectedEntity = function() {
  return /** @type{!proto.transit_realtime.EntitySelector} */ (
    jspb.Message.getWrapperField(this, gtfs$realtime_pb.EntitySelector, 1, 1));
};

/**
 * @param {!proto.transit_realtime.EntitySelector} value
 * @return {!proto.transit_realtime.MercuryStationAlternative} returns this
*/
proto.transit_realtime.MercuryStationAlternative.prototype.setAffectedEntity = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};

/**
 * Clears the field making it undefined.
 * @return {!proto.transit_realtime.MercuryStationAlternative} returns this
 */
proto.transit_realtime.MercuryStationAlternative.prototype.clearAffectedEntity = function() {
  return jspb.Message.setField(this, 1, undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.transit_realtime.MercuryStationAlternative.prototype.hasAffectedEntity = function() {
  return jspb.Message.getField(this, 1) != null;
};

/**
 * required TranslatedString notes = 2;
 * @return {!proto.transit_realtime.TranslatedString}
 */
proto.transit_realtime.MercuryStationAlternative.prototype.getNotes = function() {
  return /** @type{!proto.transit_realtime.TranslatedString} */ (
    jspb.Message.getWrapperField(this, gtfs$realtime_pb.TranslatedString, 2, 1));
};

/**
 * @param {!proto.transit_realtime.TranslatedString} value
 * @return {!proto.transit_realtime.MercuryStationAlternative} returns this
*/
proto.transit_realtime.MercuryStationAlternative.prototype.setNotes = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};

/**
 * Clears the field making it undefined.
 * @return {!proto.transit_realtime.MercuryStationAlternative} returns this
 */
proto.transit_realtime.MercuryStationAlternative.prototype.clearNotes = function() {
  return jspb.Message.setField(this, 2, undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.transit_realtime.MercuryStationAlternative.prototype.hasNotes = function() {
  return jspb.Message.getField(this, 2) != null;
};

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.transit_realtime.MercuryAlert.repeatedFields_ = [4,5,6,10];

if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.transit_realtime.MercuryAlert.prototype.toObject = function(opt_includeInstance) {
  return proto.transit_realtime.MercuryAlert.toObject(opt_includeInstance, this);
};

/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.transit_realtime.MercuryAlert} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.transit_realtime.MercuryAlert.toObject = function(includeInstance, msg) {
  var f, obj = {
    createdAt: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    updatedAt: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    alertType: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    stationAlternativeList: jspb.Message.toObjectList(msg.getStationAlternativeList(),
    proto.transit_realtime.MercuryStationAlternative.toObject, includeInstance),
    servicePlanNumberList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
    generalOrderNumberList: (f = jspb.Message.getRepeatedField(msg, 6)) == null ? undefined : f,
    displayBeforeActive: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
    humanReadableActivePeriod: (f = msg.getHumanReadableActivePeriod()) && gtfs$realtime_pb.TranslatedString.toObject(includeInstance, f),
    directionality: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
    affectedStationsList: jspb.Message.toObjectList(msg.getAffectedStationsList(),
    gtfs$realtime_pb.EntitySelector.toObject, includeInstance),
    screensSummary: (f = msg.getScreensSummary()) && gtfs$realtime_pb.TranslatedString.toObject(includeInstance, f),
    noAffectedStations: (f = jspb.Message.getBooleanField(msg, 12)) == null ? undefined : f,
    cloneId: (f = jspb.Message.getField(msg, 13)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.transit_realtime.MercuryAlert}
 */
proto.transit_realtime.MercuryAlert.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.transit_realtime.MercuryAlert;
  return proto.transit_realtime.MercuryAlert.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.transit_realtime.MercuryAlert} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.transit_realtime.MercuryAlert}
 */
proto.transit_realtime.MercuryAlert.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCreatedAt(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUpdatedAt(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAlertType(value);
      break;
    case 4:
      var value = new proto.transit_realtime.MercuryStationAlternative;
      reader.readMessage(value,proto.transit_realtime.MercuryStationAlternative.deserializeBinaryFromReader);
      msg.addStationAlternative(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addServicePlanNumber(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.addGeneralOrderNumber(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDisplayBeforeActive(value);
      break;
    case 8:
      var value = new gtfs$realtime_pb.TranslatedString;
      reader.readMessage(value,gtfs$realtime_pb.TranslatedString.deserializeBinaryFromReader);
      msg.setHumanReadableActivePeriod(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDirectionality(value);
      break;
    case 10:
      var value = new gtfs$realtime_pb.EntitySelector;
      reader.readMessage(value,gtfs$realtime_pb.EntitySelector.deserializeBinaryFromReader);
      msg.addAffectedStations(value);
      break;
    case 11:
      var value = new gtfs$realtime_pb.TranslatedString;
      reader.readMessage(value,gtfs$realtime_pb.TranslatedString.deserializeBinaryFromReader);
      msg.setScreensSummary(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setNoAffectedStations(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setCloneId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.transit_realtime.MercuryAlert.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.transit_realtime.MercuryAlert.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.transit_realtime.MercuryAlert} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.transit_realtime.MercuryAlert.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getStationAlternativeList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.transit_realtime.MercuryStationAlternative.serializeBinaryToWriter
    );
  }
  f = message.getServicePlanNumberList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
  f = message.getGeneralOrderNumberList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint64(
      7,
      f
    );
  }
  f = message.getHumanReadableActivePeriod();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      gtfs$realtime_pb.TranslatedString.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeUint64(
      9,
      f
    );
  }
  f = message.getAffectedStationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      10,
      f,
      gtfs$realtime_pb.EntitySelector.serializeBinaryToWriter
    );
  }
  f = message.getScreensSummary();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      gtfs$realtime_pb.TranslatedString.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeBool(
      12,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeString(
      13,
      f
    );
  }
};

/**
 * required uint64 created_at = 1;
 * @return {number}
 */
proto.transit_realtime.MercuryAlert.prototype.getCreatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};

/**
 * @param {number} value
 * @return {!proto.transit_realtime.MercuryAlert} returns this
 */
proto.transit_realtime.MercuryAlert.prototype.setCreatedAt = function(value) {
  return jspb.Message.setField(this, 1, value);
};

/**
 * Clears the field making it undefined.
 * @return {!proto.transit_realtime.MercuryAlert} returns this
 */
proto.transit_realtime.MercuryAlert.prototype.clearCreatedAt = function() {
  return jspb.Message.setField(this, 1, undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.transit_realtime.MercuryAlert.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 1) != null;
};

/**
 * required uint64 updated_at = 2;
 * @return {number}
 */
proto.transit_realtime.MercuryAlert.prototype.getUpdatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};

/**
 * @param {number} value
 * @return {!proto.transit_realtime.MercuryAlert} returns this
 */
proto.transit_realtime.MercuryAlert.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setField(this, 2, value);
};

/**
 * Clears the field making it undefined.
 * @return {!proto.transit_realtime.MercuryAlert} returns this
 */
proto.transit_realtime.MercuryAlert.prototype.clearUpdatedAt = function() {
  return jspb.Message.setField(this, 2, undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.transit_realtime.MercuryAlert.prototype.hasUpdatedAt = function() {
  return jspb.Message.getField(this, 2) != null;
};

/**
 * required string alert_type = 3;
 * @return {string}
 */
proto.transit_realtime.MercuryAlert.prototype.getAlertType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};

/**
 * @param {string} value
 * @return {!proto.transit_realtime.MercuryAlert} returns this
 */
proto.transit_realtime.MercuryAlert.prototype.setAlertType = function(value) {
  return jspb.Message.setField(this, 3, value);
};

/**
 * Clears the field making it undefined.
 * @return {!proto.transit_realtime.MercuryAlert} returns this
 */
proto.transit_realtime.MercuryAlert.prototype.clearAlertType = function() {
  return jspb.Message.setField(this, 3, undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.transit_realtime.MercuryAlert.prototype.hasAlertType = function() {
  return jspb.Message.getField(this, 3) != null;
};

/**
 * repeated MercuryStationAlternative station_alternative = 4;
 * @return {!Array<!proto.transit_realtime.MercuryStationAlternative>}
 */
proto.transit_realtime.MercuryAlert.prototype.getStationAlternativeList = function() {
  return /** @type{!Array<!proto.transit_realtime.MercuryStationAlternative>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.transit_realtime.MercuryStationAlternative, 4));
};

/**
 * @param {!Array<!proto.transit_realtime.MercuryStationAlternative>} value
 * @return {!proto.transit_realtime.MercuryAlert} returns this
*/
proto.transit_realtime.MercuryAlert.prototype.setStationAlternativeList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};

/**
 * @param {!proto.transit_realtime.MercuryStationAlternative=} opt_value
 * @param {number=} opt_index
 * @return {!proto.transit_realtime.MercuryStationAlternative}
 */
proto.transit_realtime.MercuryAlert.prototype.addStationAlternative = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.transit_realtime.MercuryStationAlternative, opt_index);
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.transit_realtime.MercuryAlert} returns this
 */
proto.transit_realtime.MercuryAlert.prototype.clearStationAlternativeList = function() {
  return this.setStationAlternativeList([]);
};

/**
 * repeated string service_plan_number = 5;
 * @return {!Array<string>}
 */
proto.transit_realtime.MercuryAlert.prototype.getServicePlanNumberList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};

/**
 * @param {!Array<string>} value
 * @return {!proto.transit_realtime.MercuryAlert} returns this
 */
proto.transit_realtime.MercuryAlert.prototype.setServicePlanNumberList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};

/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.transit_realtime.MercuryAlert} returns this
 */
proto.transit_realtime.MercuryAlert.prototype.addServicePlanNumber = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.transit_realtime.MercuryAlert} returns this
 */
proto.transit_realtime.MercuryAlert.prototype.clearServicePlanNumberList = function() {
  return this.setServicePlanNumberList([]);
};

/**
 * repeated string general_order_number = 6;
 * @return {!Array<string>}
 */
proto.transit_realtime.MercuryAlert.prototype.getGeneralOrderNumberList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 6));
};

/**
 * @param {!Array<string>} value
 * @return {!proto.transit_realtime.MercuryAlert} returns this
 */
proto.transit_realtime.MercuryAlert.prototype.setGeneralOrderNumberList = function(value) {
  return jspb.Message.setField(this, 6, value || []);
};

/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.transit_realtime.MercuryAlert} returns this
 */
proto.transit_realtime.MercuryAlert.prototype.addGeneralOrderNumber = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.transit_realtime.MercuryAlert} returns this
 */
proto.transit_realtime.MercuryAlert.prototype.clearGeneralOrderNumberList = function() {
  return this.setGeneralOrderNumberList([]);
};

/**
 * optional uint64 display_before_active = 7;
 * @return {number}
 */
proto.transit_realtime.MercuryAlert.prototype.getDisplayBeforeActive = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};

/**
 * @param {number} value
 * @return {!proto.transit_realtime.MercuryAlert} returns this
 */
proto.transit_realtime.MercuryAlert.prototype.setDisplayBeforeActive = function(value) {
  return jspb.Message.setField(this, 7, value);
};

/**
 * Clears the field making it undefined.
 * @return {!proto.transit_realtime.MercuryAlert} returns this
 */
proto.transit_realtime.MercuryAlert.prototype.clearDisplayBeforeActive = function() {
  return jspb.Message.setField(this, 7, undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.transit_realtime.MercuryAlert.prototype.hasDisplayBeforeActive = function() {
  return jspb.Message.getField(this, 7) != null;
};

/**
 * optional TranslatedString human_readable_active_period = 8;
 * @return {?proto.transit_realtime.TranslatedString}
 */
proto.transit_realtime.MercuryAlert.prototype.getHumanReadableActivePeriod = function() {
  return /** @type{?proto.transit_realtime.TranslatedString} */ (
    jspb.Message.getWrapperField(this, gtfs$realtime_pb.TranslatedString, 8));
};

/**
 * @param {?proto.transit_realtime.TranslatedString|undefined} value
 * @return {!proto.transit_realtime.MercuryAlert} returns this
*/
proto.transit_realtime.MercuryAlert.prototype.setHumanReadableActivePeriod = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.transit_realtime.MercuryAlert} returns this
 */
proto.transit_realtime.MercuryAlert.prototype.clearHumanReadableActivePeriod = function() {
  return this.setHumanReadableActivePeriod(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.transit_realtime.MercuryAlert.prototype.hasHumanReadableActivePeriod = function() {
  return jspb.Message.getField(this, 8) != null;
};

/**
 * optional uint64 directionality = 9;
 * @return {number}
 */
proto.transit_realtime.MercuryAlert.prototype.getDirectionality = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};

/**
 * @param {number} value
 * @return {!proto.transit_realtime.MercuryAlert} returns this
 */
proto.transit_realtime.MercuryAlert.prototype.setDirectionality = function(value) {
  return jspb.Message.setField(this, 9, value);
};

/**
 * Clears the field making it undefined.
 * @return {!proto.transit_realtime.MercuryAlert} returns this
 */
proto.transit_realtime.MercuryAlert.prototype.clearDirectionality = function() {
  return jspb.Message.setField(this, 9, undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.transit_realtime.MercuryAlert.prototype.hasDirectionality = function() {
  return jspb.Message.getField(this, 9) != null;
};

/**
 * repeated EntitySelector affected_stations = 10;
 * @return {!Array<!proto.transit_realtime.EntitySelector>}
 */
proto.transit_realtime.MercuryAlert.prototype.getAffectedStationsList = function() {
  return /** @type{!Array<!proto.transit_realtime.EntitySelector>} */ (
    jspb.Message.getRepeatedWrapperField(this, gtfs$realtime_pb.EntitySelector, 10));
};

/**
 * @param {!Array<!proto.transit_realtime.EntitySelector>} value
 * @return {!proto.transit_realtime.MercuryAlert} returns this
*/
proto.transit_realtime.MercuryAlert.prototype.setAffectedStationsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 10, value);
};

/**
 * @param {!proto.transit_realtime.EntitySelector=} opt_value
 * @param {number=} opt_index
 * @return {!proto.transit_realtime.EntitySelector}
 */
proto.transit_realtime.MercuryAlert.prototype.addAffectedStations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.transit_realtime.EntitySelector, opt_index);
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.transit_realtime.MercuryAlert} returns this
 */
proto.transit_realtime.MercuryAlert.prototype.clearAffectedStationsList = function() {
  return this.setAffectedStationsList([]);
};

/**
 * optional TranslatedString screens_summary = 11;
 * @return {?proto.transit_realtime.TranslatedString}
 */
proto.transit_realtime.MercuryAlert.prototype.getScreensSummary = function() {
  return /** @type{?proto.transit_realtime.TranslatedString} */ (
    jspb.Message.getWrapperField(this, gtfs$realtime_pb.TranslatedString, 11));
};

/**
 * @param {?proto.transit_realtime.TranslatedString|undefined} value
 * @return {!proto.transit_realtime.MercuryAlert} returns this
*/
proto.transit_realtime.MercuryAlert.prototype.setScreensSummary = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.transit_realtime.MercuryAlert} returns this
 */
proto.transit_realtime.MercuryAlert.prototype.clearScreensSummary = function() {
  return this.setScreensSummary(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.transit_realtime.MercuryAlert.prototype.hasScreensSummary = function() {
  return jspb.Message.getField(this, 11) != null;
};

/**
 * optional bool no_affected_stations = 12;
 * @return {boolean}
 */
proto.transit_realtime.MercuryAlert.prototype.getNoAffectedStations = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};

/**
 * @param {boolean} value
 * @return {!proto.transit_realtime.MercuryAlert} returns this
 */
proto.transit_realtime.MercuryAlert.prototype.setNoAffectedStations = function(value) {
  return jspb.Message.setField(this, 12, value);
};

/**
 * Clears the field making it undefined.
 * @return {!proto.transit_realtime.MercuryAlert} returns this
 */
proto.transit_realtime.MercuryAlert.prototype.clearNoAffectedStations = function() {
  return jspb.Message.setField(this, 12, undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.transit_realtime.MercuryAlert.prototype.hasNoAffectedStations = function() {
  return jspb.Message.getField(this, 12) != null;
};

/**
 * optional string clone_id = 13;
 * @return {string}
 */
proto.transit_realtime.MercuryAlert.prototype.getCloneId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};

/**
 * @param {string} value
 * @return {!proto.transit_realtime.MercuryAlert} returns this
 */
proto.transit_realtime.MercuryAlert.prototype.setCloneId = function(value) {
  return jspb.Message.setField(this, 13, value);
};

/**
 * Clears the field making it undefined.
 * @return {!proto.transit_realtime.MercuryAlert} returns this
 */
proto.transit_realtime.MercuryAlert.prototype.clearCloneId = function() {
  return jspb.Message.setField(this, 13, undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.transit_realtime.MercuryAlert.prototype.hasCloneId = function() {
  return jspb.Message.getField(this, 13) != null;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.transit_realtime.MercuryEntitySelector.prototype.toObject = function(opt_includeInstance) {
  return proto.transit_realtime.MercuryEntitySelector.toObject(opt_includeInstance, this);
};

/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.transit_realtime.MercuryEntitySelector} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.transit_realtime.MercuryEntitySelector.toObject = function(includeInstance, msg) {
  var f, obj = {
    sortOrder: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.transit_realtime.MercuryEntitySelector}
 */
proto.transit_realtime.MercuryEntitySelector.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.transit_realtime.MercuryEntitySelector;
  return proto.transit_realtime.MercuryEntitySelector.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.transit_realtime.MercuryEntitySelector} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.transit_realtime.MercuryEntitySelector}
 */
proto.transit_realtime.MercuryEntitySelector.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSortOrder(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.transit_realtime.MercuryEntitySelector.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.transit_realtime.MercuryEntitySelector.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.transit_realtime.MercuryEntitySelector} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.transit_realtime.MercuryEntitySelector.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
};

/**
 * @enum {number}
 */
proto.transit_realtime.MercuryEntitySelector.Priority = {
  PRIORITY_NO_SCHEDULED_SERVICE: 1,
  INFORMATION_OUTAGE: 2,
  STATION_NOTICE: 3,
  SPECIAL_NOTICE: 4,
  WEEKDAY_SCHEDULE: 5,
  WEEKEND_SCHEDULE: 6,
  SATURDAY_SCHEDULE: 7,
  SUNDAY_SCHEDULE: 8,
  EXTRA_SERVICE: 9,
  BOARDING_CHANGE: 10,
  SPECIAL_SCHEDULE: 11,
  EXPECT_DELAYS: 12,
  REDUCED_SERVICE: 13,
  PLANNED_EXPRESS_TO_LOCAL: 14,
  PLANNED_EXTRA_TRANSFER: 15,
  PLANNED_STOPS_SKIPPED: 16,
  PLANNED_DETOUR: 17,
  PLANNED_REROUTE: 18,
  PLANNED_SUBSTITUTE_BUSES: 19,
  PLANNED_PART_SUSPENDED: 20,
  PLANNED_SUSPENDED: 21,
  SOME_DELAYS: 22,
  EXPRESS_TO_LOCAL: 23,
  DELAYS: 24,
  CANCELLATIONS: 25,
  DELAYS_AND_CANCELLATIONS: 26,
  STOPS_SKIPPED: 27,
  SEVERE_DELAYS: 28,
  DETOUR: 29,
  REROUTE: 30,
  SUBSTITUTE_BUSES: 31,
  PART_SUSPENDED: 32,
  SUSPENDED: 33
};

/**
 * required string sort_order = 1;
 * @return {string}
 */
proto.transit_realtime.MercuryEntitySelector.prototype.getSortOrder = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};

/**
 * @param {string} value
 * @return {!proto.transit_realtime.MercuryEntitySelector} returns this
 */
proto.transit_realtime.MercuryEntitySelector.prototype.setSortOrder = function(value) {
  return jspb.Message.setField(this, 1, value);
};

/**
 * Clears the field making it undefined.
 * @return {!proto.transit_realtime.MercuryEntitySelector} returns this
 */
proto.transit_realtime.MercuryEntitySelector.prototype.clearSortOrder = function() {
  return jspb.Message.setField(this, 1, undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.transit_realtime.MercuryEntitySelector.prototype.hasSortOrder = function() {
  return jspb.Message.getField(this, 1) != null;
};

/**
 * A tuple of {field number, class constructor} for the extension
 * field named `mercuryFeedHeader`.
 * @type {!jspb.ExtensionFieldInfo<!proto.transit_realtime.MercuryFeedHeader>}
 */
proto.transit_realtime.mercuryFeedHeader = new jspb.ExtensionFieldInfo(
    1001,
    {mercuryFeedHeader: 0},
    proto.transit_realtime.MercuryFeedHeader,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         proto.transit_realtime.MercuryFeedHeader.toObject),
    0);

gtfs$realtime_pb.FeedHeader.extensionsBinary[1001] = new jspb.ExtensionFieldBinaryInfo(
    proto.transit_realtime.mercuryFeedHeader,
    jspb.BinaryReader.prototype.readMessage,
    jspb.BinaryWriter.prototype.writeMessage,
    proto.transit_realtime.MercuryFeedHeader.serializeBinaryToWriter,
    proto.transit_realtime.MercuryFeedHeader.deserializeBinaryFromReader,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
gtfs$realtime_pb.FeedHeader.extensions[1001] = proto.transit_realtime.mercuryFeedHeader;

/**
 * A tuple of {field number, class constructor} for the extension
 * field named `mercuryAlert`.
 * @type {!jspb.ExtensionFieldInfo<!proto.transit_realtime.MercuryAlert>}
 */
proto.transit_realtime.mercuryAlert = new jspb.ExtensionFieldInfo(
    1001,
    {mercuryAlert: 0},
    proto.transit_realtime.MercuryAlert,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         proto.transit_realtime.MercuryAlert.toObject),
    0);

gtfs$realtime_pb.Alert.extensionsBinary[1001] = new jspb.ExtensionFieldBinaryInfo(
    proto.transit_realtime.mercuryAlert,
    jspb.BinaryReader.prototype.readMessage,
    jspb.BinaryWriter.prototype.writeMessage,
    proto.transit_realtime.MercuryAlert.serializeBinaryToWriter,
    proto.transit_realtime.MercuryAlert.deserializeBinaryFromReader,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
gtfs$realtime_pb.Alert.extensions[1001] = proto.transit_realtime.mercuryAlert;

/**
 * A tuple of {field number, class constructor} for the extension
 * field named `mercuryEntitySelector`.
 * @type {!jspb.ExtensionFieldInfo<!proto.transit_realtime.MercuryEntitySelector>}
 */
proto.transit_realtime.mercuryEntitySelector = new jspb.ExtensionFieldInfo(
    1001,
    {mercuryEntitySelector: 0},
    proto.transit_realtime.MercuryEntitySelector,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         proto.transit_realtime.MercuryEntitySelector.toObject),
    0);

gtfs$realtime_pb.EntitySelector.extensionsBinary[1001] = new jspb.ExtensionFieldBinaryInfo(
    proto.transit_realtime.mercuryEntitySelector,
    jspb.BinaryReader.prototype.readMessage,
    jspb.BinaryWriter.prototype.writeMessage,
    proto.transit_realtime.MercuryEntitySelector.serializeBinaryToWriter,
    proto.transit_realtime.MercuryEntitySelector.deserializeBinaryFromReader,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
gtfs$realtime_pb.EntitySelector.extensions[1001] = proto.transit_realtime.mercuryEntitySelector;

goog.object.extend(exports, proto);